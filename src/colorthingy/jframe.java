/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colorthingy;

import java.awt.Color;
import java.util.Stack;

class ColorStore {

    public int r;
    public int g;
    public int b;
}

/**
 *
 * @author homefolder
 */
public class jframe extends javax.swing.JFrame {

    private boolean istext;
    private ColorStore textColor;
    private ColorStore windowColor;

    private Stack undoManager = new Stack();
    private Stack redoManager = new Stack();

    /**
     * Creates new form jframe
     */
    public jframe() {
        initComponents();

        buttonGroup1.add(textColorRadio);
        buttonGroup1.add(windowColorRadio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jThing = new javax.swing.JTextArea();
        rSlider = new javax.swing.JSlider();
        gSlider = new javax.swing.JSlider();
        bSlider = new javax.swing.JSlider();
        colorPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        windowColorRadio = new javax.swing.JRadioButton();
        textColorRadio = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        removeSpaces = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(255, 255, 255, 255));
        setMaximumSize(new java.awt.Dimension(255, 255));

        jThing.setColumns(20);
        jThing.setRows(5);
        jScrollPane1.setViewportView(jThing);

        rSlider.setMaximum(255);
        rSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rSliderStateChanged(evt);
            }
        });
        rSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rSliderMouseReleased(evt);
            }
        });

        gSlider.setMaximum(255);
        gSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gSliderStateChanged(evt);
            }
        });
        gSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                gSliderMouseReleased(evt);
            }
        });

        bSlider.setMaximum(255);
        bSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bSliderStateChanged(evt);
            }
        });
        bSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bSliderMouseReleased(evt);
            }
        });

        colorPanel.setBackground(new java.awt.Color(0, 0, 0));
        colorPanel.setForeground(new java.awt.Color(255, 255, 255));
        colorPanel.setMaximumSize(new java.awt.Dimension(255, 255));
        colorPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                colorPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout colorPanelLayout = new javax.swing.GroupLayout(colorPanel);
        colorPanel.setLayout(colorPanelLayout);
        colorPanelLayout.setHorizontalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        colorPanelLayout.setVerticalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("R");

        jLabel2.setText("G");

        jLabel3.setText("B");

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        windowColorRadio.setText("Window Color");
        windowColorRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowColorRadioActionPerformed(evt);
            }
        });

        textColorRadio.setText("Text Color");
        textColorRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textColorRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textColorRadio)
                    .addComponent(windowColorRadio))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textColorRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(windowColorRadio)
                .addContainerGap())
        );

        jButton1.setText("All Caps");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("New Line");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        undoButton.setText("<-");
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });

        redoButton.setText("->");
        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });

        removeSpaces.setText("Remove Spaces");
        removeSpaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSpacesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(colorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButton1))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(undoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(redoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(removeSpaces)))))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(undoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(redoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(rSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeSpaces)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(15, 15, 15)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(colorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textColorRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textColorRadioActionPerformed
        // TODO add your handling code here:
        istext = true;

        if (textColor != null) {
            rSlider.setValue(textColor.r);
            gSlider.setValue(textColor.g);
            bSlider.setValue(textColor.b);
        } else {
            windowColor = new ColorStore();

            windowColor.r = r_last;
            windowColor.b = b_last;
            windowColor.g = g_last;
        }
    }//GEN-LAST:event_textColorRadioActionPerformed

    private int r_last;
    private int g_last;
    private int b_last;

    private void updateColor(int r, int g, int b) {
        if (textColorRadio.isSelected()) {
            undoManager.push("TEXTCOLOR");

        } else {
            undoManager.push("WINDOWCOLOR");
        }
        undoManager.push(String.format("%d, %d, %d", r_last, b_last, g_last));

        System.out.println("PUSHED: COLOR & ");
        System.out.print(r_last);
        System.out.print(g_last);
        System.out.print(b_last);

        r_last = r;
        g_last = g;
        b_last = b;

        Color c = new Color(r, g, b, 255);
        System.out.println(r + " " + " " + g + " " + b);
        if (istext) {
            jThing.setForeground(c);

            jLabel4.setText(r + " ");
            jLabel5.setText(b + " ");
        } else {
            jThing.setBackground(c);

            jLabel4.setText(r + " ");
            jLabel5.setText(b + " ");
        }
    }

    private void colorPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorPanelMouseDragged
        // TODO add your handling code here:

        try {
            int r = colorPanel.getMousePosition().x;
            int g = gSlider.getValue();
            int b = colorPanel.getMousePosition().y;
            r = (int) (r * 2.55);
            g = (int) (g * 2.55);
            b = (int) (b * 2.55);
            updateColor(r, g, b);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_colorPanelMouseDragged

    private void rSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rSliderStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rSliderStateChanged

    private void windowColorRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowColorRadioActionPerformed
        istext = false;        // TODO add your handling code here:

        if (windowColor != null) {
            rSlider.setValue(windowColor.r);
            gSlider.setValue(windowColor.g);
            bSlider.setValue(windowColor.b);
        } else {
            textColor = new ColorStore();

            textColor.r = r_last;
            textColor.b = b_last;
            textColor.g = g_last;
        }
    }//GEN-LAST:event_windowColorRadioActionPerformed

    private void gSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gSliderStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_gSliderStateChanged

    private void bSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bSliderStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_bSliderStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String oldText = jThing.getText();

        jThing.setText(oldText.toUpperCase());

        undoManager.push("CAPS");
        undoManager.push(oldText);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String a = jThing.getText();
        jThing.setText(jThing.getText().replace(' ', '\n'));
        undoManager.push("NEWLINE");
        undoManager.push(a);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        // TODO add your handling code here:
        String data = (String) redoManager.pop();
        //redoManager.push(data);
        String data2 = (String) redoManager.pop();
       // redoManager.push(data);
        
        switch (data2) {
            case "CAPS": {
                jThing.setText(data);
            }
            break;
            case "NEWLINE": {
                jThing.setText(data);
            }
            break;
            case "TEXTCOLOR": {
                textColorRadio.setSelected(true);
                String[] seperatedData = data.split(",");

                int r_value = Integer.parseInt(seperatedData[0].replace(" ", ""));
                int g_value = Integer.parseInt(seperatedData[1].replace(" ", ""));
                int b_value = Integer.parseInt(seperatedData[2].replace(" ", ""));

                jThing.setForeground(new Color(r_value, g_value, b_value, 255));
                rSlider.setValue(r_value);
                gSlider.setValue(g_value);
                bSlider.setValue(b_value);
            }
            break;
            case "WINDOWCOLOR": {
                windowColorRadio.setSelected(true);
                String[] seperatedData = data.split(",");

                int r_value = Integer.parseInt(seperatedData[0].replace(" ", ""));
                int g_value = Integer.parseInt(seperatedData[1].replace(" ", ""));
                int b_value = Integer.parseInt(seperatedData[2].replace(" ", ""));

                jThing.setBackground(new Color(r_value, g_value, b_value, 255));
                rSlider.setValue(r_value);
                gSlider.setValue(g_value);
                bSlider.setValue(b_value);
            }
            break;
            case "REPLACESPACE": {
                jThing.setText(data);
            }
            break;

        }

        
    }//GEN-LAST:event_redoButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        String data = (String) undoManager.pop();
        redoManager.push(data);
        String data2 = (String) undoManager.pop();
        redoManager.push(data);
        
        switch (data2) {
            case "CAPS": {
                jThing.setText(data);
            }
            break;
            case "NEWLINE": {
                jThing.setText(data);
            }
            break;
            case "TEXTCOLOR": {
                textColorRadio.setSelected(true);
                String[] seperatedData = data.split(",");

                int r_value = Integer.parseInt(seperatedData[0].replace(" ", ""));
                int g_value = Integer.parseInt(seperatedData[1].replace(" ", ""));
                int b_value = Integer.parseInt(seperatedData[2].replace(" ", ""));

                jThing.setForeground(new Color(r_value, g_value, b_value, 255));
                rSlider.setValue(r_value);
                gSlider.setValue(g_value);
                bSlider.setValue(b_value);
            }
            break;
            case "WINDOWCOLOR": {
                windowColorRadio.setSelected(true);
                String[] seperatedData = data.split(",");

                int r_value = Integer.parseInt(seperatedData[0].replace(" ", ""));
                int g_value = Integer.parseInt(seperatedData[1].replace(" ", ""));
                int b_value = Integer.parseInt(seperatedData[2].replace(" ", ""));

                jThing.setBackground(new Color(r_value, g_value, b_value, 255));
                rSlider.setValue(r_value);
                gSlider.setValue(g_value);
                bSlider.setValue(b_value);
            }
            break;
            case "REPLACESPACE": {
                jThing.setText(data);
            }
            break;

        }

        // TODO add your handling code here:

    }//GEN-LAST:event_undoButtonActionPerformed

    private void removeSpacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSpacesActionPerformed
        // TODO add your handling code here:
        String a = jThing.getText();
        jThing.setText(jThing.getText().replace(" ", ""));
        undoManager.push("REPLACESPACE");
        undoManager.push(a);
    }//GEN-LAST:event_removeSpacesActionPerformed

    private void rSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSliderMouseReleased
        // TODO add your handling code here:
        try {
            int r = rSlider.getValue();
            int g = gSlider.getValue();
            int b = bSlider.getValue();

            updateColor(r, g, b);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_rSliderMouseReleased

    private void gSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gSliderMouseReleased
        // TODO add your handling code here:
        try {
            int r = rSlider.getValue();
            int g = gSlider.getValue();
            int b = bSlider.getValue();

            updateColor(r, g, b);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_gSliderMouseReleased

    private void bSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSliderMouseReleased
        // TODO add your handling code here:
        try {
            int r = rSlider.getValue();
            int g = gSlider.getValue();
            int b = bSlider.getValue();

            updateColor(r, g, b);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_bSliderMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider bSlider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel colorPanel;
    private javax.swing.JSlider gSlider;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jThing;
    private javax.swing.JSlider rSlider;
    private javax.swing.JButton redoButton;
    private javax.swing.JButton removeSpaces;
    private javax.swing.JRadioButton textColorRadio;
    private javax.swing.JButton undoButton;
    private javax.swing.JRadioButton windowColorRadio;
    // End of variables declaration//GEN-END:variables
}
